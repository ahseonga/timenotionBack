/*유저 ---------------------------------------- */
CREATE TABLE GGHJ_USER
(
    USER_ID       NUMBER,--PK
    USER_NAME     VARCHAR2(20)  NOT NULL,
    USER_PASSWORD VARCHAR2(255) NOT NULL,
    USER_EMAIL    VARCHAR2(255) NOT NULL UNIQUE,
    USER_NICKNAME VARCHAR2(20)  NOT NULL UNIQUE,
    USER_BIRTH    DATE          NOT NULL,
/*    user_isadmin  char(1)      default '0',*/
    CONSTRAINT PK_USER PRIMARY KEY (USER_ID)
);
-- 유저 소개글 추가해야됨 


/*카카오 유저 ---------------------------------------- */
CREATE TABLE GGHJ_KAKAO
(
    KAKAO_ID       NUMBER,--PK
    KAKAO_EMAIL    VARCHAR2(255) NOT NULL UNIQUE,
    KAKAO_NICKNAME VARCHAR2(20)  UNIQUE,
    KAKAO_BIRTH    DATE          NOT NULL,
    CONSTRAINT PK_KAKAO_USER PRIMARY KEY (KAKAO_ID)
);

/*통합회원 --------------------------------------------*/
CREATE TABLE GGHJ_UNI(
	   UNI_ID NUMBER, 
    UNI_STATUS VARCHAR2(20) DEFAULT '일반' NOT NULL,
    UNI_ABOUT VARCHAR2(255), 
    USER_ID NUMBER, 
    KAKAO_ID NUMBER, 
    CONSTRAINT PK_UNI PRIMARY KEY (UNI_ID),
    CONSTRAINT FK_UNI_USER FOREIGN KEY(USER_ID) REFERENCES GGHJ_USER(USER_ID),
    CONSTRAINT FK_UNI_KAKAO FOREIGN KEY(KAKAO_ID) REFERENCES GGHJ_KAKAO(KAKAO_ID), 
    CONSTRAINT CHECK_UNI_STATUS CHECK (UNI_STATUS IN ('일반', '정지', '탈퇴'))
);

-- 정지회원 댓글, 글 작성 불가 


/*유저 사진 -----------------------------------*/
CREATE TABLE GGHJ_FILE
(
    FILE_ID             NUMBER,--PK
    FILE_PROFILE_NAME   VARCHAR2(255) DEFAULT '' NOT NULL,-- default : 사진 경로
    FILE_PROFILE_SOURCE VARCHAR2(255) DEFAULT '' NOT NULL,-- default : 사진 경로
    FILE_BACK_NAME      VARCHAR2(255) DEFAULT '' NOT NULL,-- default : 사진 경로
    FILE_BACK_SOURCE    VARCHAR2(255) DEFAULT '' NOT NULL,-- default : 사진 경로
    USER_ID              NUMBER,--FK
    CONSTRAINT PK_FILE PRIMARY KEY (FILE_ID),
    CONSTRAINT FK_FILE_USER FOREIGN KEY (USER_ID) REFERENCES GGHJ_UNI (UNI_ID)
);

/*팔로우 ----------------------------------------*/
CREATE TABLE GGHJ_FOLLOW
(
    FOLLOW_ID        NUMBER,--PK
    FOLLOW_TO_USER   NUMBER NOT NULL,-- FK
    FOLLOW_FROM_USER NUMBER NOT NULL,-- FK
    FOLLOW_CREATED_DATE DATE DEFAULT SYSDATE NOT NULL,
    CONSTRAINT PK_FOLLOW PRIMARY KEY (FOLLOW_ID),
    CONSTRAINT FK_FOLLOW_TO FOREIGN KEY (FOLLOW_TO_USER) REFERENCES GGHJ_UNI (UNI_ID),
    CONSTRAINT FK_FOLLOW_FROM FOREIGN KEY (FOLLOW_FROM_USER) REFERENCES GGHJ_UNI (UNI_ID)
);


/*일대기(게시판) -----------------------------------*/
CREATE TABLE GGHJ_BOARD
(
    BOARD_ID           NUMBER,--PK
    BOARD_TITLE        VARCHAR2(50)           NOT NULL,
    BOARD_CONTENT 	   VARCHAR2(2000) 		  NOT NULL,
    BOARD_PUBLIC       VARCHAR2(20)  DEFAULT 'O'  NOT NULL,--DEFAULT, CHECK
    BOARD_CREATED_DATE DATE   DEFAULT SYSDATE NOT NULL,
    BOARD_UPDATED_DATE DATE   DEFAULT SYSDATE,
    BOARD_VIEW_COUNT   NUMBER DEFAULT 0       NOT NULL, --default
    BOARD_LIFE_CYCLE   VARCHAR2(20) DEFAULT '청소년기' NOT NULL,--DEFAULT 청소년기, CHECK
    BOARD_LIKE_COUNT   NUMBER DEFAULT 0       NOT NULL,
    BOARD_YEAR 		  NUMBER,
    USER_ID            NUMBER,-- FK
    CONSTRAINT PK_BOARD PRIMARY KEY (BOARD_ID),
    CONSTRAINT FK_BOARD_UNI FOREIGN KEY (USER_ID) REFERENCES GGHJ_UNI (UNI_ID),
    CONSTRAINT CHECK_LIFE_CYCLE CHECK (BOARD_LIFE_CYCLE IN('유년기','아동기','청소년기','청년','중년','노년','전성기')),
    CONSTRAINT CHECK_BOARD_PUBLIC CHECK(BOARD_PUBLIC IN('O', 'X'))

);

/*일대기 파일 ------------------------------------------------------------*/
CREATE TABLE GGHJ_BOARD_FILE
(
    BOARD_FILE_ID          NUMBER,--PK
    BOARD_FILE_NAME        VARCHAR2(255) DEFAULT '' NOT NULL,-- DEFAULT : 사진 경로
    BOARD_FILE_SOURCE_NAME VARCHAR2(255) DEFAULT '' NOT NULL,-- DEFAULT : 사진 경로
    BOARD_ID               NUMBER,--FK
    CONSTRAINT PK_BOARD_FILE PRIMARY KEY (BOARD_FILE_ID),
    CONSTRAINT FK_BOARD_ID FOREIGN KEY (BOARD_ID) REFERENCES GGHJ_BOARD (BOARD_ID)
);

/*좋아요 -------------------------------------------------------------------*/
CREATE TABLE GGHJ_LIKE
(
    LIKE_ID  NUMBER,--PK
    BOARD_ID NUMBER,--FK
    USER_ID  NUMBER,--FK
    LIKE_CREATED_DATE DATE DEFAULT SYSDATE NOT NULL,
    CONSTRAINT PK_LIKE_ID PRIMARY KEY (LIKE_ID),
    CONSTRAINT FK_LIKE_BOARD FOREIGN KEY (BOARD_ID) REFERENCES GGHJ_BOARD (BOARD_ID),
    CONSTRAINT FK_LIKE_USER FOREIGN KEY (USER_ID) REFERENCES GGHJ_UNI(UNI_ID)
);


/*댓글 ----------------------------------------------------------------------*/
CREATE TABLE GGHJ_COMMENT
(
    COMMENT_ID           NUMBER,--PK
    COMMENT_CONTENT      VARCHAR2(255)        NOT NULL,
    COMMENT_CREATED_DATE DATE DEFAULT SYSDATE NOT NULL,
    BOARD_ID             NUMBER,--FK
    USER_ID              NUMBER,--FK
    CONSTRAINT PK_COMMENT PRIMARY KEY (COMMENT_ID),
    CONSTRAINT FK_COMMENTBOARD FOREIGN KEY (BOARD_ID) REFERENCES GGHJ_BOARD (BOARD_ID),
    CONSTRAINT FK_COMMENTUSER FOREIGN KEY (USER_ID) REFERENCES GGHJ_UNI (UNI_ID)
);

/*대댓글 ------------------------------------------------------------------------*/
CREATE TABLE GGHJ_REPLY
(
    REPLY_ID           NUMBER,--PK
    REPLY_CONTENT      VARCHAR2(255)        NOT NULL,
    REPLY_CREATED_DATE DATE DEFAULT SYSDATE NOT NULL,
    COMMENT_ID         NUMBER,--FK
    CONSTRAINT PK_REPLY PRIMARY KEY (REPLY_ID),
    CONSTRAINT FK_REPLY_COMMENT FOREIGN KEY (COMMENT_ID) REFERENCES GGHJ_COMMENT (COMMENT_ID)
);

/*신고 ----------------------------------------------------------*/
CREATE TABLE GGHJ_REPORT
(
    REPORT_ID           NUMBER,--PK
    REPORT_REASON       VARCHAR2(50)         NOT NULL,
    REPORT_CREATED_DATE DATE DEFAULT SYSDATE NOT NULL,
    REPORT_COUNT 		NUMBER DEFAULT 0 NOT NULL,
    USER_ID             NUMBER,-- FK
    REPLY_ID            NUMBER,-- FK
    COMMENT_ID          NUMBER,-- FK
    CONSTRAINT PK_REPORT PRIMARY KEY (REPORT_ID),
    CONSTRAINT FK_REPORT_USER FOREIGN KEY (USER_ID) REFERENCES GGHJ_USER (USER_ID),
    CONSTRAINT FK_REPORT_REPLY FOREIGN KEY (REPLY_ID) REFERENCES GGHJ_REPLY (REPLY_ID),
    CONSTRAINT FK_REPORT_COMMENT FOREIGN KEY (COMMENT_ID) REFERENCES GGHJ_COMMENT (COMMENT_ID)
);

/*문의 ------------------------------------------------------*/
CREATE TABLE GGHJ_INQUIRY
(
    INQUIRY_ID            NUMBER,--PK
    INQUIRY_TITLE         VARCHAR2(255)            NOT NULL,
    INQUIRY_CONTENT VARCHAR2(2000) NOT NULL,
    INQUIRY_RESPONSE VARCHAR2(2000),
    INQUIRY_CREATED_DATE DATE           DEFAULT SYSDATE NOT NULL,
    INQUIRY_PUBLIC        VARCHAR2(20)  DEFAULT 'O' NOT NULL,-- DEFAULT
    INQUIRY_BANNER_NAME   VARCHAR2(255) DEFAULT '' NOT NULL,-- default : 사진 경로
    INQUIRY_BANNER_SOURCE VARCHAR2(255) DEFAULT '' NOT NULL,-- default : 사진 경로
    USER_ID               NUMBER,--FK
    CONSTRAINT PK_INQUIRY PRIMARY KEY (INQUIRY_ID),
    CONSTRAINT FK_INQUIRY_USER FOREIGN KEY (USER_ID) REFERENCES GGHJ_UNI (UNI_ID),
    CONSTRAINT CHECK_INQUIRY_PUBLIC CHECK(INQUIRY_PUBLIC IN('O', 'X'))
);

/*공지 ------------------------------------------------------------*/
CREATE TABLE GGHJ_NOTICE
(
    NOTICE_ID            NUMBER,--PK
    NOTICE_TITLE         VARCHAR2(255)            NOT NULL,
    NOTICE_CONTENT VARCHAR2(2000) NOT NULL,
    NOTICE_CREATED_DATE DATE           DEFAULT SYSDATE NOT NULL,
    NOTICE_BANNER_NAME VARCHAR2(255) DEFAULT '' NOT NULL,-- default : 사진 경로
    NOTICE_BANNER_SOURCE VARCHAR2(255) DEFAULT '' NOT NULL,-- default : 사진 경로
    USER_ID              NUMBER, -- 관리자때문에 있는듯
    CONSTRAINT PK_NOTICE PRIMARY KEY (NOTICE_ID),
    CONSTRAINT FK_NOTICE_USER FOREIGN KEY (USER_ID) REFERENCES GGHJ_UNI (UNI_ID)
);

/*배너 ------------------------------*/
CREATE TABLE GGHJ_MAIN_BANNER
(
    BANNER_ID     NUMBER,--PK
    BANNER_NAME   VARCHAR2(255) DEFAULT '' NOT NULL,-- default : 사진 경로
    BANNER_SOURCE VARCHAR2(255) DEFAULT '' NOT NULL,-- default : 사진 경로
    USER_ID       NUMBER,--FK
    CONSTRAINT PK_BANNER PRIMARY KEY (BANNER_ID),
    CONSTRAINT FK_BANNER_USER FOREIGN KEY (USER_ID) REFERENCES GGHJ_UNI (UNI_ID)
);

--CREATE TABLE GGHJ_AUTHORITY (
--   AUTHORITY_ID NUMBER PRIMARY KEY,
--   AUTHORITY_NICKNAME VARCHAR(20) NOT NULL UNIQUE
--);

--CREATE TABLE GGHJ_authorization (
--   AUTHENTIC_ID NUMBER PRIMARY KEY,
--   USER_ID NUMBER,
--   AUTHORITY_ID NUMBER,
--   CONSTRAINT FK_AUTHENTIC_USER FOREIGN KEY (USER_ID) REFERENCES GGHJ_USER(USER_ID),
--   CONSTRAINT FK_AUTHORITY_ID FOREIGN KEY (AUTHORITY_ID) REFERENCES GGHJ_AUTHORITY(AUTHORITY_ID)
--);

--권한있는 사람 테이블 삭제
-- DROP TABLE GGHJ_AUTHORITY CASCADE CONSTRAINTS;

--권한 부여테이블 삭제
-- DROP TABLE GGHJ_authorization CASCADE CONSTRAINTS;

/*CREATE TABLE GGHJ_ALARM(
	ALARM_ID NUMBER, --PK
	USER_ID NUMBER, --FK
	REPORT_ID NUMBER, --FK
);*/
-- 배너 테이블 삭제
DROP TABLE GGHJ_MAIN_BANNER CASCADE CONSTRAINTS;
-- 공지 테이블 삭제
DROP TABLE GGHJ_NOTICE CASCADE CONSTRAINTS;
-- 문의 테이블 삭제
DROP TABLE GGHJ_INQUIRY CASCADE CONSTRAINTS;
-- 신고 테이블 삭제
DROP TABLE GGHJ_REPORT CASCADE CONSTRAINTS;
-- 대댓글 테이블 삭제
DROP TABLE GGHJ_REPLY CASCADE CONSTRAINTS;
-- 댓글 테이블 삭제
DROP TABLE GGHJ_COMMENT CASCADE CONSTRAINTS;
-- 좋아요 테이블 삭제
DROP TABLE GGHJ_LIKE CASCADE CONSTRAINTS;
-- 게시판 파일 테이블 삭제
DROP TABLE GGHJ_BOARD_FILE CASCADE CONSTRAINTS;
-- 게시판 테이블 삭제
DROP TABLE GGHJ_BOARD CASCADE CONSTRAINTS;
-- 팔로우 테이블 삭제
DROP TABLE GGHJ_FOLLOW CASCADE CONSTRAINTS;
-- 유저 사진 테이블 삭제
DROP TABLE GGHJ_FILE CASCADE CONSTRAINTS;
-- 유니(통합) 테이블 삭제
DROP TABLE GGHJ_UNI CASCADE CONSTRAINTS;
-- 유저 테이블 삭제
DROP TABLE GGHJ_USER CASCADE CONSTRAINTS;
-- 카카오 테이블 삭제
DROP TABLE GGHJ_KAKAO CASCADE CONSTRAINTS;

DROP SEQUENCE SEQ_AUTHENTIC;


DROP SEQUENCE SEQ_AUTHORITY;

DROP SEQUENCE SEQ_USER;

DROP SEQUENCE SEQ_KAKAO;

DROP SEQUENCE SEQ_UNI;

DROP SEQUENCE SEQ_FILE;

DROP SEQUENCE SEQ_FOLLOW;

DROP SEQUENCE SEQ_BOARD;

DROP SEQUENCE SEQ_BOARD_FILE;

DROP SEQUENCE SEQ_COMMENT;

DROP SEQUENCE SEQ_REPLY;

DROP SEQUENCE SEQ_REPORT;

DROP SEQUENCE SEQ_NOTICE;

DROP SEQUENCE SEQ_INQUIRY;

DROP SEQUENCE SEQ_LIKE;

-- gghj-user 더미
INSERT INTO GGHJ_USER (USER_ID, USER_NAME, USER_PASSWORD, USER_EMAIL, USER_NICKNAME, USER_BIRTH)
VALUES (1, 'John Doe', 'password123', 'john.doe@example.com', 'johnny', TO_DATE('1990-01-01', 'YYYY-MM-DD'));

INSERT INTO GGHJ_USER (USER_ID, USER_NAME, USER_PASSWORD, USER_EMAIL, USER_NICKNAME, USER_BIRTH)
VALUES (2, 'Jane Smith', 'securePass!', 'jane.smith@example.com', 'janeS', TO_DATE('1985-05-15', 'YYYY-MM-DD'));

INSERT INTO GGHJ_USER (USER_ID, USER_NAME, USER_PASSWORD, USER_EMAIL, USER_NICKNAME, USER_BIRTH)
VALUES (3, 'Alice Johnson', 'alicePwd$', 'alice.j@example.com', 'aliceJ', TO_DATE('1992-08-24', 'YYYY-MM-DD'));

INSERT INTO GGHJ_USER (USER_ID, USER_NAME, USER_PASSWORD, USER_EMAIL, USER_NICKNAME, USER_BIRTH)
VALUES (4, 'Bob Brown', 'bobPass#2021', 'bob.brown@example.com', 'bobby', TO_DATE('1988-12-10', 'YYYY-MM-DD'));

INSERT INTO GGHJ_USER (USER_ID, USER_NAME, USER_PASSWORD, USER_EMAIL, USER_NICKNAME, USER_BIRTH)
VALUES (5, 'Charlie White', 'charlieSecure*', 'charlie.white@example.com', 'charlieW', TO_DATE('1995-03-30', 'YYYY-MM-DD'));

-- kakao 더미
INSERT INTO GGHJ_KAKAO (KAKAO_ID, KAKAO_EMAIL, KAKAO_NICKNAME, KAKAO_BIRTH)
VALUES (1, 'kakao.john@example.com', 'kakaoJohn', TO_DATE('1990-01-01', 'YYYY-MM-DD'));

INSERT INTO GGHJ_KAKAO (KAKAO_ID, KAKAO_EMAIL, KAKAO_NICKNAME, KAKAO_BIRTH)
VALUES (2, 'kakao.jane@example.com', 'kakaoJane', TO_DATE('1985-05-15', 'YYYY-MM-DD'));

INSERT INTO GGHJ_KAKAO (KAKAO_ID, KAKAO_EMAIL, KAKAO_NICKNAME, KAKAO_BIRTH)
VALUES (3, 'kakao.alice@example.com', 'kakaoAlice', TO_DATE('1992-08-24', 'YYYY-MM-DD'));

INSERT INTO GGHJ_KAKAO (KAKAO_ID, KAKAO_EMAIL, KAKAO_NICKNAME, KAKAO_BIRTH)
VALUES (4, 'kakao.bob@example.com', 'kakaoBob', TO_DATE('1988-12-10', 'YYYY-MM-DD'));

INSERT INTO GGHJ_KAKAO (KAKAO_ID, KAKAO_EMAIL, KAKAO_NICKNAME, KAKAO_BIRTH)
VALUES (5, 'kakao.charlie@example.com', 'kakaoCharlie', TO_DATE('1995-03-30', 'YYYY-MM-DD'));

-- GGHJ_UNI 테이블의 더미 데이터
INSERT INTO GGHJ_UNI (UNI_ID, UNI_STATUS, UNI_ABOUT, USER_ID, KAKAO_ID)
VALUES (1, '일반', 'Standard user profile', 1, null);

INSERT INTO GGHJ_UNI (UNI_ID, UNI_STATUS, UNI_ABOUT, USER_ID, KAKAO_ID)
VALUES (2, '일반', 'User profile suspended', 2, null);

INSERT INTO GGHJ_UNI (UNI_ID, UNI_STATUS, UNI_ABOUT, USER_ID, KAKAO_ID)
VALUES (3, '일반', 'User profile withdrawn', 3, null);

INSERT INTO GGHJ_UNI (UNI_ID, UNI_STATUS, UNI_ABOUT, USER_ID, KAKAO_ID)
VALUES (4, '일반', 'Active user profile', 4, NULL);

INSERT INTO GGHJ_UNI (UNI_ID, UNI_STATUS, UNI_ABOUT, USER_ID, KAKAO_ID)
VALUES (5, '일반', 'Inactive user profile', 5, null);


-- GGHJ_FILE 테이블의 더미 데이터
INSERT INTO GGHJ_FILE (FILE_ID, FILE_PROFILE_NAME, FILE_PROFILE_SOURCE, FILE_BACK_NAME, FILE_BACK_SOURCE, USER_ID)
VALUES (1, 'profile1.jpg', '/images/profile1.jpg', 'background1.jpg', '/images/background1.jpg', 1);

INSERT INTO GGHJ_FILE (FILE_ID, FILE_PROFILE_NAME, FILE_PROFILE_SOURCE, FILE_BACK_NAME, FILE_BACK_SOURCE, USER_ID)
VALUES (2, 'profile2.jpg', '/images/profile2.jpg', 'background2.jpg', '/images/background2.jpg', 2);

INSERT INTO GGHJ_FILE (FILE_ID, FILE_PROFILE_NAME, FILE_PROFILE_SOURCE, FILE_BACK_NAME, FILE_BACK_SOURCE, USER_ID)
VALUES (3, 'profile3.jpg', '/images/profile3.jpg', 'background3.jpg', '/images/background3.jpg', 3);

INSERT INTO GGHJ_FILE (FILE_ID, FILE_PROFILE_NAME, FILE_PROFILE_SOURCE, FILE_BACK_NAME, FILE_BACK_SOURCE, USER_ID)
VALUES (4, 'profile4.jpg', '/images/profile4.jpg', 'background4.jpg', '/images/background4.jpg', 4);

INSERT INTO GGHJ_FILE (FILE_ID, FILE_PROFILE_NAME, FILE_PROFILE_SOURCE, FILE_BACK_NAME, FILE_BACK_SOURCE, USER_ID)
VALUES (5, 'profile5.jpg', '/images/profile5.jpg', 'background5.jpg', '/images/background5.jpg', 5);

-- follow 더미
INSERT INTO GGHJ_FOLLOW (FOLLOW_ID, FOLLOW_TO_USER, FOLLOW_FROM_USER, FOLLOW_CREATED_DATE)
VALUES (1, 1, 2, SYSDATE);

INSERT INTO GGHJ_FOLLOW (FOLLOW_ID, FOLLOW_TO_USER, FOLLOW_FROM_USER, FOLLOW_CREATED_DATE)
VALUES (2, 1, 2, SYSDATE);

INSERT INTO GGHJ_FOLLOW (FOLLOW_ID, FOLLOW_TO_USER, FOLLOW_FROM_USER, FOLLOW_CREATED_DATE)
VALUES (3, 1, 3, SYSDATE);

INSERT INTO GGHJ_FOLLOW (FOLLOW_ID, FOLLOW_TO_USER, FOLLOW_FROM_USER, FOLLOW_CREATED_DATE)
VALUES (4, 1, 4, SYSDATE);

INSERT INTO GGHJ_FOLLOW (FOLLOW_ID, FOLLOW_TO_USER, FOLLOW_FROM_USER, FOLLOW_CREATED_DATE)
VALUES (5, 5, 2, SYSDATE);

-- Board 더미
INSERT INTO GGHJ_BOARD (BOARD_ID, BOARD_TITLE, BOARD_CONTENT, BOARD_PUBLIC, BOARD_CREATED_DATE, BOARD_UPDATED_DATE, BOARD_VIEW_COUNT, BOARD_LIFE_CYCLE, BOARD_LIKE_COUNT, BOARD_YEAR, USER_ID)
VALUES (1, 'My First Post', 'This is the content of my first post.', 'O', SYSDATE, SYSDATE, 0, '청소년기', 0, 2024, 1);

INSERT INTO GGHJ_BOARD (BOARD_ID, BOARD_TITLE, BOARD_CONTENT, BOARD_PUBLIC, BOARD_CREATED_DATE, BOARD_UPDATED_DATE, BOARD_VIEW_COUNT, BOARD_LIFE_CYCLE, BOARD_LIKE_COUNT, BOARD_YEAR, USER_ID)
VALUES (2, 'A Day in the Life', 'Today I want to share what a typical day looks like for me.', 'X', SYSDATE, SYSDATE, 0, '청년', 0, 2024, 2);

INSERT INTO GGHJ_BOARD (BOARD_ID, BOARD_TITLE, BOARD_CONTENT, BOARD_PUBLIC, BOARD_CREATED_DATE, BOARD_UPDATED_DATE, BOARD_VIEW_COUNT, BOARD_LIFE_CYCLE, BOARD_LIKE_COUNT, BOARD_YEAR, USER_ID)
VALUES (3, 'Reflections', 'Reflecting on the past few years and what I have learned.', 'O', SYSDATE, SYSDATE, 0, '중년', 0, 2024, 1);

INSERT INTO GGHJ_BOARD (BOARD_ID, BOARD_TITLE, BOARD_CONTENT, BOARD_PUBLIC, BOARD_CREATED_DATE, BOARD_UPDATED_DATE, BOARD_VIEW_COUNT, BOARD_LIFE_CYCLE, BOARD_LIKE_COUNT, BOARD_YEAR, USER_ID)
VALUES (4, 'Travel Diaries', 'Sharing my travel experiences and adventures.', 'O', SYSDATE, SYSDATE, 0, '전성기', 0, 2024, 4);

INSERT INTO GGHJ_BOARD (BOARD_ID, BOARD_TITLE, BOARD_CONTENT, BOARD_PUBLIC, BOARD_CREATED_DATE, BOARD_UPDATED_DATE, BOARD_VIEW_COUNT, BOARD_LIFE_CYCLE, BOARD_LIKE_COUNT, BOARD_YEAR, USER_ID)
VALUES (5, 'Family Memories', 'Cherishing the moments spent with family.', 'X', SYSDATE, SYSDATE, 0, '노년', 0, 2024, 5);

-- Board-file 더미
INSERT INTO GGHJ_BOARD_FILE (BOARD_FILE_ID, BOARD_FILE_NAME, BOARD_FILE_SOURCE_NAME, BOARD_ID)
VALUES (1, '/images/photo1.jpg', 'photo1.jpg', 1);

INSERT INTO GGHJ_BOARD_FILE (BOARD_FILE_ID, BOARD_FILE_NAME, BOARD_FILE_SOURCE_NAME, BOARD_ID)
VALUES (2, '/images/photo2.jpg', 'photo2.jpg', 2);

INSERT INTO GGHJ_BOARD_FILE (BOARD_FILE_ID, BOARD_FILE_NAME, BOARD_FILE_SOURCE_NAME, BOARD_ID)
VALUES (3, '/images/photo3.jpg', 'photo3.jpg', 3);

INSERT INTO GGHJ_BOARD_FILE (BOARD_FILE_ID, BOARD_FILE_NAME, BOARD_FILE_SOURCE_NAME, BOARD_ID)
VALUES (4, '/images/photo4.jpg', 'photo4.jpg', 4);

INSERT INTO GGHJ_BOARD_FILE (BOARD_FILE_ID, BOARD_FILE_NAME, BOARD_FILE_SOURCE_NAME, BOARD_ID)
VALUES (5, '/images/photo5.jpg', 'photo5.jpg', 5);

-- Comment 더미
INSERT INTO GGHJ_COMMENT (COMMENT_ID, COMMENT_CONTENT, COMMENT_CREATED_DATE, BOARD_ID, USER_ID)
VALUES (1, 'Great post! Really enjoyed reading it.', SYSDATE, 1, 1);

INSERT INTO GGHJ_COMMENT (COMMENT_ID, COMMENT_CONTENT, COMMENT_CREATED_DATE, BOARD_ID, USER_ID)
VALUES (2, 'Thank you for sharing your experience.', SYSDATE, 2, 2);

INSERT INTO GGHJ_COMMENT (COMMENT_ID, COMMENT_CONTENT, COMMENT_CREATED_DATE, BOARD_ID, USER_ID)
VALUES (3, 'This is very insightful, thanks!', SYSDATE, 3, 2);

INSERT INTO GGHJ_COMMENT (COMMENT_ID, COMMENT_CONTENT, COMMENT_CREATED_DATE, BOARD_ID, USER_ID)
VALUES (4, 'I can relate to this so much.', SYSDATE, 4, 4);

INSERT INTO GGHJ_COMMENT (COMMENT_ID, COMMENT_CONTENT, COMMENT_CREATED_DATE, BOARD_ID, USER_ID)
VALUES (5, 'Wonderful memories, thank you for posting.', SYSDATE, 5, 5);


--reply 더미
INSERT INTO GGHJ_REPLY (REPLY_ID, REPLY_CONTENT, REPLY_CREATED_DATE, COMMENT_ID)
VALUES (1, 'I agree with your point!', SYSDATE, 1);

INSERT INTO GGHJ_REPLY (REPLY_ID, REPLY_CONTENT, REPLY_CREATED_DATE, COMMENT_ID)
VALUES (2, 'Thanks for the feedback!', SYSDATE, 2);

INSERT INTO GGHJ_REPLY (REPLY_ID, REPLY_CONTENT, REPLY_CREATED_DATE, COMMENT_ID)
VALUES (3, 'Glad you found it helpful!', SYSDATE, 3);

INSERT INTO GGHJ_REPLY (REPLY_ID, REPLY_CONTENT, REPLY_CREATED_DATE, COMMENT_ID)
VALUES (4, 'Exactly my thoughts!', SYSDATE, 4);

INSERT INTO GGHJ_REPLY (REPLY_ID, REPLY_CONTENT, REPLY_CREATED_DATE, COMMENT_ID)
VALUES (5, 'Appreciate your kind word!', sysdate, 3);

-- report 더미
INSERT INTO GGHJ_REPORT (REPORT_ID, REPORT_REASON, REPORT_CREATED_DATE, REPORT_COUNT, USER_ID, REPLY_ID, COMMENT_ID)
VALUES (1, 'Inappropriate content', SYSDATE, 1, 2, 1, 1);

INSERT INTO GGHJ_REPORT (REPORT_ID, REPORT_REASON, REPORT_CREATED_DATE, REPORT_COUNT, USER_ID, REPLY_ID, COMMENT_ID)
VALUES (2, 'Harassment', SYSDATE, 1, 2, 2, 2);

INSERT INTO GGHJ_REPORT (REPORT_ID, REPORT_REASON, REPORT_CREATED_DATE, REPORT_COUNT, USER_ID, REPLY_ID, COMMENT_ID)
VALUES (3, 'Spam', SYSDATE, 1, 2, 3, 3);

INSERT INTO GGHJ_REPORT (REPORT_ID, REPORT_REASON, REPORT_CREATED_DATE, REPORT_COUNT, USER_ID, REPLY_ID, COMMENT_ID)
VALUES (4, 'Offensive language', SYSDATE, 1, 4, 4, 4);

INSERT INTO GGHJ_REPORT (REPORT_ID, REPORT_REASON, REPORT_CREATED_DATE, REPORT_COUNT, USER_ID, REPLY_ID, COMMENT_ID)
VALUES (5, 'False information', SYSDATE, 1, 5, 5, 5);


-- inquiry 더미
INSERT INTO GGHJ_INQUIRY (INQUIRY_ID, INQUIRY_TITLE, INQUIRY_CONTENT, INQUIRY_RESPONSE, INQUIRY_CREATED_DATE, INQUIRY_PUBLIC, INQUIRY_BANNER_NAME, INQUIRY_BANNER_SOURCE, USER_ID)
VALUES (1, 'Question about service', 'I have a question about the service.', 'Thank you for your inquiry. We will get back to you shortly.', SYSDATE, 'O', '/images/banner1.jpg', 'banner1.jpg', 1);

INSERT INTO GGHJ_INQUIRY (INQUIRY_ID, INQUIRY_TITLE, INQUIRY_CONTENT, INQUIRY_RESPONSE, INQUIRY_CREATED_DATE, INQUIRY_PUBLIC, INQUIRY_BANNER_NAME, INQUIRY_BANNER_SOURCE, USER_ID)
VALUES (2, 'Feature request', 'Can you add this feature to the platform?', 'We appreciate your feedback. We will consider your request.', SYSDATE, 'X', '/images/banner2.jpg', 'banner2.jpg', 2);

INSERT INTO GGHJ_INQUIRY (INQUIRY_ID, INQUIRY_TITLE, INQUIRY_CONTENT, INQUIRY_RESPONSE, INQUIRY_CREATED_DATE, INQUIRY_PUBLIC, INQUIRY_BANNER_NAME, INQUIRY_BANNER_SOURCE, USER_ID)
VALUES (3, 'Bug report', 'There is a bug in the system.', 'Thank you for reporting the bug. Our team is looking into it.', SYSDATE, 'O', '/images/banner3.jpg', 'banner3.jpg', 3);

INSERT INTO GGHJ_INQUIRY (INQUIRY_ID, INQUIRY_TITLE, INQUIRY_CONTENT, INQUIRY_RESPONSE, INQUIRY_CREATED_DATE, INQUIRY_PUBLIC, INQUIRY_BANNER_NAME, INQUIRY_BANNER_SOURCE, USER_ID)
VALUES (4, 'Account issue', 'I am having trouble with my account.', 'Sorry for the inconvenience. Please try resetting your password.', SYSDATE, 'X', '/images/banner4.jpg', 'banner4.jpg', 4);

INSERT INTO GGHJ_INQUIRY (INQUIRY_ID, INQUIRY_TITLE, INQUIRY_CONTENT, INQUIRY_RESPONSE, INQUIRY_CREATED_DATE, INQUIRY_PUBLIC, INQUIRY_BANNER_NAME, INQUIRY_BANNER_SOURCE, USER_ID)
VALUES (5, 'General inquiry', 'I would like to know more about your services.', 'Thank you for your interest. Please visit our FAQ section for more information.', SYSDATE, 'O', '/images/banner5.jpg', 'banner5.jpg', 5);

-- notice 더미
INSERT INTO GGHJ_NOTICE (NOTICE_ID, NOTICE_TITLE, NOTICE_CONTENT, NOTICE_CREATED_DATE, NOTICE_BANNER_NAME, NOTICE_BANNER_SOURCE, USER_ID)
VALUES (1, 'Welcome to Our Service', 'We are excited to have you on board. Stay tuned for updates!', SYSDATE, '/images/notice_banner1.jpg', 'notice_banner1.jpg', 1);

INSERT INTO GGHJ_NOTICE (NOTICE_ID, NOTICE_TITLE, NOTICE_CONTENT, NOTICE_CREATED_DATE, NOTICE_BANNER_NAME, NOTICE_BANNER_SOURCE, USER_ID)
VALUES (2, 'Maintenance Downtime', 'Our service will be down for maintenance on June 1st from 2 AM to 4 AM.', SYSDATE, '/images/notice_banner2.jpg', 'notice_banner2.jpg', 2);

INSERT INTO GGHJ_NOTICE (NOTICE_ID, NOTICE_TITLE, NOTICE_CONTENT, NOTICE_CREATED_DATE, NOTICE_BANNER_NAME, NOTICE_BANNER_SOURCE, USER_ID)
VALUES (3, 'New Feature Release', 'We are excited to announce new features coming this summer!', SYSDATE, '/images/notice_banner3.jpg', 'notice_banner3.jpg', 3);

INSERT INTO GGHJ_NOTICE (NOTICE_ID, NOTICE_TITLE, NOTICE_CONTENT, NOTICE_CREATED_DATE, NOTICE_BANNER_NAME, NOTICE_BANNER_SOURCE, USER_ID)
VALUES (4, 'Policy Update', 'Please review our updated privacy policy.', SYSDATE, '/images/notice_banner4.jpg', 'notice_banner4.jpg', 4);

INSERT INTO GGHJ_NOTICE (NOTICE_ID, NOTICE_TITLE, NOTICE_CONTENT, NOTICE_CREATED_DATE, NOTICE_BANNER_NAME, NOTICE_BANNER_SOURCE, USER_ID)
VALUES (5, 'Community Guidelines', 'We have updated our community guidelines to ensure a safe environment for all users.', SYSDATE, '/images/notice_banner5.jpg', 'notice_banner5.jpg', 5);


--main-banner 더미
INSERT INTO GGHJ_MAIN_BANNER (BANNER_ID, BANNER_NAME, BANNER_SOURCE, USER_ID)
VALUES (1, '/images/main_banner1.jpg', 'main_banner1.jpg', 1);

INSERT INTO GGHJ_MAIN_BANNER (BANNER_ID, BANNER_NAME, BANNER_SOURCE, USER_ID)
VALUES (2, '/images/main_banner2.jpg', 'main_banner2.jpg', 2);

INSERT INTO GGHJ_MAIN_BANNER (BANNER_ID, BANNER_NAME, BANNER_SOURCE, USER_ID)
VALUES (3, '/images/main_banner3.jpg', 'main_banner3.jpg', 3);

INSERT INTO GGHJ_MAIN_BANNER (BANNER_ID, BANNER_NAME, BANNER_SOURCE, USER_ID)
VALUES (4, '/images/main_banner4.jpg', 'main_banner4.jpg', 4);

INSERT INTO GGHJ_MAIN_BANNER (BANNER_ID, BANNER_NAME, BANNER_SOURCE, USER_ID)
VALUES (5, '/images/main_banner5.jpg', 'main_banner5.jpg', 5);



---------
-- boardMaper에 추가예정
-- 모두의 일대기 : 조회수 게시판(정렬) --
   
SELECT -- 네모칸 안에 뜨는것만 -- 
    u.USER_NICKNAME, b.BOARD_TITLE , b.BOARD_TITLE  
FROM 
    GGHJ_BOARD b JOIN GGHJ_USER u
    ON u.user_id = b.USER_ID 
ORDER BY 
	BOARD_VIEW_COUNT DESC;


-- boardMapper에 추가예정
-- 모두의 일대기 : 최신 게시판(정렬) --
   
SELECT -- 네모칸 안에 뜨는것만 -- 
    u.USER_NICKNAME, b.BOARD_TITLE , b.BOARD_TITLE  
FROM 
    GGHJ_BOARD b JOIN GGHJ_USER u
    ON u.user_id = b.USER_ID 
ORDER BY 
	b.BOARD_CREATED_DATE DESC;

-- boardMaper에 추가예정
-- 모두의 일대기 : 인기 게시판(정렬) --

SELECT 
    u.USER_NICKNAME, b.BOARD_TITLE, b.BOARD_TITLE 
FROM 
    GGHJ_BOARD b JOIN GGHJ_USER u
    ON u.user_id = b.USER_ID 
ORDER BY 
    b.BOARD_LIKE_COUNT DESC;
   

-- 대댓글 내용, 대댓글 작성일 -- 
SELECT 
    c.COMMENT_CONTENT,
    r.REPLY_CONTENT,
    r.REPLY_CREATED_DATE	
FROM 
    GGHJ_COMMENT c 
JOIN 
    GGHJ_REPLY r ON c.COMMENT_ID = r.COMMENT_ID;
   
-- Insert - 대댓글 작성
INSERT INTO GGHJ_REPLY (REPLY_ID, REPLY_CONTENT, REPLY_CREATED_DATE, COMMENT_ID)
VALUES (SEQ_REPLY.NEXTVAL, '안녕하세요', SYSDATE, 1);

-- Delete - 대댓글 삭제
DELETE FROM GGHJ_REPLY
WHERE REPLY_ID = ??

-- Insert - 대댓글 신고
INSERT INTO GGHJ_REPORT (REPORT_ID, REPORT_REASON, REPORT_CREATED_DATE, REPORT_COUNT, REPLY_ID)
VALUES (SEQ_REPORT.NEXTVAL, '너 나쁜사람', SYSDATE, 1, 2);

-- Update - 대댓글 신고
UPDATE GGHJ_REPORT
SET REPORT_REASON = '너 나쁜사람.'
WHERE REPORT_ID = 1;











   
    
    
    


  
   
   









