--시퀀스
SELECT
	SEQ_BOARD.NEXTVAL
FROM
	DUAL;
-- 게시판 정보 불러오기 
--        SELECT *
--        FROM GGHJ_BOARD
--        WHERE USER_ID = #{userId}
        
SELECT
	*
FROM
	GGHJ_BOARD
WHERE
	USER_ID = 1 ;
--게시판 데이터 입력하기
-- INSERT INTO GGHJ_BOARD (BOARD_ID, BOARD_TITLE, BOARD_CONTENT, BOARD_PUBLIC, BOARD_CREATED_DATE, BOARD_UPDATED_DATE
--                               , BOARD_VIEW_COUNT, BOARD_LIFE_CYCLE, BOARD_LIKE_COUNT, USER_ID)
--        VALUES  (#{boardId},#{boardTitle},#{boardContent},#{boardPublic},SYSDATE,SYSDATE
--                ,#{boardViewCount},#{boardLifeCycle},#{boardLikeCount},#{userId})

-- 특정 글 삭제 -->
--DELETE FROM GGHJ_BOARD
--WHERE USER_ID = #{userId}

DELETE
FROM
	GGHJ_BOARD
WHERE
	USER_ID = 1;

-- 글 수정 -->
--   UPDATE GGHJ_BOARD
--   SET BOARD_TITLE = #{boardTitle} , BOARD_VIEW_COUNT = #{boardViewCount} , BOARD_CREATED_DATE = #{boardCreatedDate} , BOARD_CONTENT = #{boardContent} 
--   WHERE id = #{id}

UPDATE
	GGHJ_BOARD
SET
	BOARD_TITLE,BOARD_VIEW_COUNT, BOARD_CREATED_DATE,BOARD_CONTENT
WHERE
	USER_ID = 1;

--유아기
SELECT BOARD_TITLE,BOARD_VIEW_COUNT, BOARD_CREATED_DATE,BOARD_CONTENT
FROM GGHJ_BOARD 
WHERE BOARD_LIFE_CYCLE = '유아기';

--유년기
SELECT BOARD_TITLE,BOARD_VIEW_COUNT, BOARD_CREATED_DATE,BOARD_CONTENT
FROM GGHJ_BOARD 
WHERE BOARD_LIFE_CYCLE = '유년기';

--아동기
SELECT BOARD_TITLE,BOARD_VIEW_COUNT, BOARD_CREATED_DATE,BOARD_CONTENT
FROM GGHJ_BOARD 
WHERE BOARD_LIFE_CYCLE = '아동기';

--청소년기
SELECT BOARD_TITLE,BOARD_VIEW_COUNT, BOARD_CREATED_DATE,BOARD_CONTENT
FROM GGHJ_BOARD 
WHERE BOARD_LIFE_CYCLE = '청소년기';

--성인기
SELECT BOARD_TITLE,BOARD_VIEW_COUNT, BOARD_CREATED_DATE,BOARD_CONTENT
FROM GGHJ_BOARD 
WHERE BOARD_LIFE_CYCLE = '성인기';

--중년기
SELECT BOARD_TITLE,BOARD_VIEW_COUNT, BOARD_CREATED_DATE,BOARD_CONTENT
FROM GGHJ_BOARD 
WHERE BOARD_LIFE_CYCLE = '중년';
	
--노년기
SELECT BOARD_TITLE,BOARD_VIEW_COUNT, BOARD_CREATED_DATE,BOARD_CONTENT
FROM GGHJ_BOARD 
WHERE BOARD_LIFE_CYCLE = '노년';

--MAPPER.XML
--SELECT BOARD_TITLE,BOARD_VIEW_COUNT, BOARD_CREATED_DATE,BOARD_CONTENT
--FROM GGHJ_BOARD 
--WHERE BOARD_LIFE_CYCLE = #{BOARD_LIFE_CYCLE}

	
--신고
--INSERT INTO GGHJ_REPORT (REPORT_ID, REPORT_REASON, REPORT_CREATED_DATE, REPORT_COUNT,USER_ID,COMMENT_ID)
--VALUES(#{reportId}, #{reportReason}, #{reportCreatedDate}, #{reportCount}, #{userId}, #{commentId})

-- 조회수 게시판(정렬) --
   
SELECT -- 네모칸 안에 뜨는것만 -- 
    u.USER_NICKNAME, b.BOARD_TITLE , b.BOARD_TITLE  
FROM 
    GGHJ_BOARD b JOIN GGHJ_USER u
    ON u.user_id = b.USER_ID 
ORDER BY 
   BOARD_VIEW_COUNT DESC;
  
  SELECT board_view_count
  FROM GGHJ_BOARD 
  WHERE USER_id = 1;

-- 최신 게시판(정렬) --
   
SELECT -- 네모칸 안에 뜨는것만 -- 
    u.USER_NICKNAME, b.BOARD_TITLE , b.BOARD_TITLE  
FROM 
    GGHJ_BOARD b JOIN GGHJ_USER u
    ON u.user_id = b.USER_ID 
ORDER BY 
   b.BOARD_CREATED_DATE DESC;

-- 인기 게시판(정렬) --

SELECT 
    u.USER_NICKNAME, b.BOARD_TITLE, b.BOARD_TITLE 
FROM 
    GGHJ_BOARD b JOIN GGHJ_USER u
    ON u.user_id = b.USER_ID 
ORDER BY 
    b.BOARD_LIKE_COUNT DESC;
   
-- 대댓글 내용, 대댓글 작성일 -- 
SELECT 
    c.COMMENT_CONTENT,
    r.REPLY_CONTENT,
    r.REPLY_CREATED_DATE
FROM 
    GGHJ_COMMENT c 
JOIN 
    GGHJ_REPLY r ON c.COMMENT_ID = r.COMMENT_ID;
   
-- Insert - 대댓글 작성
INSERT INTO GGHJ_REPLY (REPLY_ID, REPLY_CONTENT, REPLY_CREATED_DATE, COMMENT_ID)
VALUES (SEQ_REPLY.NEXTVAL, '안녕하세요', SYSDATE, 1);

-- Delete - 대댓글 삭제
DELETE FROM GGHJ_REPLY
WHERE REPLY_ID = ??

-- Insert - 대댓글 신고
INSERT INTO GGHJ_REPORT (REPORT_ID, REPORT_REASON, REPORT_CREATED_DATE, REPORT_COUNT, REPLY_ID)
VALUES (SEQ_REPORT.NEXTVAL, '바보', SYSDATE, 1, 2);

-- Update - 대댓글 신고
UPDATE GGHJ_REPORT
SET REPORT_REASON = '너 나쁜사람.'
WHERE REPORT_ID = 1;

--//
SELECT 
    C.COMMENT_CONTENT AS COMMENTS_CONTENT, 
    C.COMMENT_CREATED_DATE AS CREATED_DATE,
    B.BOARD_TITLE AS BOARD_TITLE,
    C.USER_ID AS USER_ID
FROM 
    GGHJ_COMMENT C
JOIN GGHJ_BOARD B
ON C.BOARD_ID = B.BOARD_ID
WHERE 
    C.USER_ID = 3
UNION ALL
SELECT 
    R.REPLY_CONTENT AS COMMENTS_CONTENT, 
    R.REPLY_CREATED_DATE AS CREATED_DATE,
    B.BOARD_TITLE AS BOARD_TITLE,
    R.USER_ID AS USER_ID
FROM 
    GGHJ_REPLY R
JOIN GGHJ_COMMENT C
ON R.COMMENT_ID = C.COMMENT_ID
JOIN GGHJ_BOARD B
ON C.BOARD_ID = B.BOARD_ID 
WHERE 
    R.USER_ID = 3
;